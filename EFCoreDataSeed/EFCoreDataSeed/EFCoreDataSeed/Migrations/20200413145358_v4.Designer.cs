// <auto-generated />
using EFCoreDataSeed.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreDataSeed.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20200413145358_v4")]
    partial class v4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreDataSeed.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Name = "HR"
                        },
                        new
                        {
                            DepartmentID = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            DepartmentID = 5,
                            Name = "Production"
                        });
                });

            modelBuilder.Entity("EFCoreDataSeed.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            DepartmentID = 1,
                            Name = "Rahul Dravid"
                        },
                        new
                        {
                            EmployeeID = 2,
                            DepartmentID = 1,
                            Name = "Trump"
                        },
                        new
                        {
                            EmployeeID = 3,
                            DepartmentID = 2,
                            Name = "Barak Obama"
                        },
                        new
                        {
                            EmployeeID = 4,
                            DepartmentID = 2,
                            Name = "Virat Kohli"
                        },
                        new
                        {
                            EmployeeID = 5,
                            DepartmentID = 3,
                            Name = "Muhammad Ali"
                        },
                        new
                        {
                            EmployeeID = 6,
                            DepartmentID = 3,
                            Name = "Michael Schumacher"
                        },
                        new
                        {
                            EmployeeID = 7,
                            DepartmentID = 2,
                            Name = "Lionel Messi"
                        },
                        new
                        {
                            EmployeeID = 8,
                            DepartmentID = 3,
                            Name = "Rafael Nadal"
                        });
                });

            modelBuilder.Entity("EFCoreDataSeed.Models.EmployeeAddress", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("EmployeeAddress");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            Address = "Bangalore, India"
                        },
                        new
                        {
                            EmployeeID = 2,
                            Address = "Newyork, USA"
                        },
                        new
                        {
                            EmployeeID = 3,
                            Address = "California, USA"
                        },
                        new
                        {
                            EmployeeID = 4,
                            Address = "NewDelhi, India"
                        },
                        new
                        {
                            EmployeeID = 5,
                            Address = "Kentuki, USA"
                        },
                        new
                        {
                            EmployeeID = 6,
                            Address = "Hurth, Germany"
                        },
                        new
                        {
                            EmployeeID = 7,
                            Address = "Rosario, Argentina"
                        },
                        new
                        {
                            EmployeeID = 8,
                            Address = "Manacor, Spain"
                        });
                });

            modelBuilder.Entity("EFCoreDataSeed.Models.EmployeesInProject", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID", "ProjectID");

                    b.HasIndex("ProjectID");

                    b.ToTable("EmployeesInProject");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            ProjectID = 1
                        },
                        new
                        {
                            EmployeeID = 1,
                            ProjectID = 4
                        },
                        new
                        {
                            EmployeeID = 2,
                            ProjectID = 2
                        },
                        new
                        {
                            EmployeeID = 2,
                            ProjectID = 3
                        },
                        new
                        {
                            EmployeeID = 3,
                            ProjectID = 2
                        },
                        new
                        {
                            EmployeeID = 3,
                            ProjectID = 5
                        },
                        new
                        {
                            EmployeeID = 4,
                            ProjectID = 1
                        },
                        new
                        {
                            EmployeeID = 4,
                            ProjectID = 3
                        },
                        new
                        {
                            EmployeeID = 5,
                            ProjectID = 3
                        },
                        new
                        {
                            EmployeeID = 5,
                            ProjectID = 2
                        },
                        new
                        {
                            EmployeeID = 6,
                            ProjectID = 4
                        },
                        new
                        {
                            EmployeeID = 6,
                            ProjectID = 2
                        },
                        new
                        {
                            EmployeeID = 7,
                            ProjectID = 5
                        },
                        new
                        {
                            EmployeeID = 7,
                            ProjectID = 1
                        },
                        new
                        {
                            EmployeeID = 8,
                            ProjectID = 6
                        },
                        new
                        {
                            EmployeeID = 8,
                            ProjectID = 5
                        });
                });

            modelBuilder.Entity("EFCoreDataSeed.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectID");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            ProjectID = 1,
                            Name = "Cricket"
                        },
                        new
                        {
                            ProjectID = 2,
                            Name = "Politics"
                        },
                        new
                        {
                            ProjectID = 3,
                            Name = "Boxing"
                        },
                        new
                        {
                            ProjectID = 4,
                            Name = "Racing"
                        },
                        new
                        {
                            ProjectID = 5,
                            Name = "Football"
                        },
                        new
                        {
                            ProjectID = 6,
                            Name = "Tennis"
                        });
                });

            modelBuilder.Entity("EFCoreDataSeed.Models.Employee", b =>
                {
                    b.HasOne("EFCoreDataSeed.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreDataSeed.Models.EmployeeAddress", b =>
                {
                    b.HasOne("EFCoreDataSeed.Models.Employee", "Employee")
                        .WithOne("EmployeeAddress")
                        .HasForeignKey("EFCoreDataSeed.Models.EmployeeAddress", "EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreDataSeed.Models.EmployeesInProject", b =>
                {
                    b.HasOne("EFCoreDataSeed.Models.Employee", "Employee")
                        .WithMany("Projects")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreDataSeed.Models.Project", "Project")
                        .WithMany("Employees")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
